---
openapi: 3.0.1
info:
  title: Revel Digital REST API
  description: Provides REST based access to your Revel Digital account
  version: v1
servers:
- url: https://api.reveldigital.com
paths:
  "/account":
    get:
      tags:
      - Account
      summary: Gets account details.
      description: ''
      parameters:
      - name: api_key
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Returns account details
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Account"
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
    put:
      tags:
      - Account
      summary: Updates an account.
      description: ''
      parameters:
      - name: api_key
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Account"
      responses:
        '201':
          description: If account was updated successfully
        '204':
          description: No Content
        '400':
          description: If the account API key is invalid
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/devices":
    get:
      tags:
      - Devices
      summary: Gets all devices in an account.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: id
        in: query
        description: ''
        schema:
          type: string
      - name: take
        in: query
        description: ''
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        description: ''
        schema:
          type: integer
          format: int32
      - name: device_type_id
        in: query
        description: ''
        schema:
          type: string
      - name: group_id
        in: query
        description: ''
        schema:
          type: array
          items:
            type: string
      - name: group_name
        in: query
        description: ''
        schema:
          type: array
          items:
            type: string
      - name: include_snap
        in: query
        description: ''
        schema:
          type: boolean
          default: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Device"
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
    post:
      tags:
      - Devices
      summary: Registers a new device.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: activation_code
        in: query
        description: ''
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DeviceRequest"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Device"
        '400':
          description: Bad Request
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/devices/{id}":
    get:
      tags:
      - Devices
      summary: Gets a device by ID.
      operationId: GetDevice
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Device"
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
    put:
      tags:
      - Devices
      summary: Updates a device.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DeviceRequest"
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
    delete:
      tags:
      - Devices
      summary: Delete a device.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
    patch:
      tags:
      - Devices
      summary: "Patch a device. Patch allows partial updates by targeting specific
        properties of the device.\r\nUses the JSON Patch syntax (http://jsonpatch.com)"
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/JsonPatchDocument"
      responses:
        '200':
          description: Success
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/devices/groups":
    get:
      tags:
      - Devices
      summary: Gets device groups in the account.
      operationId: GetDeviceGroups
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: tree
        in: query
        description: ''
        schema:
          type: boolean
          default: false
      - name: id
        in: query
        description: ''
        schema:
          type: string
      - name: take
        in: query
        description: ''
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        description: ''
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Group"
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
    post:
      tags:
      - Devices
      summary: Create a new device group.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GroupRequest"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Group"
        '400':
          description: Bad Request
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/devices/groups/{id}":
    put:
      tags:
      - Devices
      summary: Updates a device group.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: id
        in: path
        description: Group id
        required: true
        schema:
          type: string
      requestBody:
        description: Device group
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GroupRequest"
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
    delete:
      tags:
      - Devices
      summary: Delete a device group.
      description: Group must be empty.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/devices/pingdata":
    get:
      tags:
      - Devices
      summary: Gets device ping data by registration key.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: key
        in: query
        description: ''
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PingData"
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/devices/{registrationKey}/snap":
    get:
      tags:
      - Devices
      summary: Gets current snapshot of the device screen.
      parameters:
      - name: registrationKey
        in: path
        description: ''
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
  "/devices/{registrationKey}/pingdata":
    get:
      tags:
      - Devices
      summary: Gets device ping data by registration key.
      parameters:
      - name: registrationKey
        in: path
        description: ''
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PingData"
  "/devices/commands":
    post:
      tags:
      - Devices
      summary: Sends a collection of commands to devices.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/DeviceCommand"
      responses:
        '204':
          description: No Content
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/devices/{id}/commands":
    post:
      tags:
      - Devices
      summary: Sends a collection of commands to a specific device.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/Command"
      responses:
        '204':
          description: No Content
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/devices/{id}/track":
    post:
      tags:
      - Devices
      summary: Create an event associated with a device.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Event"
      responses:
        '204':
          description: No Content
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/media":
    get:
      tags:
      - Media
      summary: Gets all media in an account.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: id
        in: query
        description: ''
        schema:
          type: string
      - name: take
        in: query
        description: ''
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        description: ''
        schema:
          type: integer
          format: int32
      - name: group_id
        in: query
        description: ''
        schema:
          type: array
          items:
            type: string
      - name: group_name
        in: query
        description: ''
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Media"
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
    post:
      tags:
      - Media
      summary: Uploads new media asset.
      description: POST body must be in multipart/form-data format
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                name:
                  type: string
                group_id:
                  type: string
                tags:
                  type: string
                advertiser_id:
                  type: string
                is_shared:
                  type: boolean
                start_date:
                  type: string
                  format: date-time
                end_date:
                  type: string
                  format: date-time
            encoding:
              file:
                style: form
              name:
                style: form
              group_id:
                style: form
              tags:
                style: form
              advertiser_id:
                style: form
              is_shared:
                style: form
              start_date:
                style: form
              end_date:
                style: form
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Media"
        '400':
          description: Bad Request
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/media/{id}":
    get:
      tags:
      - Media
      summary: Gets media item by ID.
      operationId: GetMedia
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Media"
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
    put:
      tags:
      - Media
      summary: Update media asset properties.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: id
        in: path
        description: Media Id
        required: true
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MediaRequest"
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
    patch:
      tags:
      - Media
      summary: "Patch a media item. Patch allows partial updates by targeting specific
        properties of the schedule.\r\nUses the JSON Patch syntax (http://jsonpatch.com)"
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: id
        in: path
        description: Media Id
        required: true
        schema:
          type: string
      requestBody:
        description: Patch update
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/JsonPatchDocument"
      responses:
        '200':
          description: Success
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
    delete:
      tags:
      - Media
      summary: Delete media asset.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/media/groups":
    get:
      tags:
      - Media
      summary: Gets media groups.
      operationId: GetMediaGroups
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: tree
        in: query
        description: ''
        schema:
          type: boolean
          default: false
      - name: id
        in: query
        description: ''
        schema:
          type: string
      - name: take
        in: query
        description: ''
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        description: ''
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Group"
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
    post:
      tags:
      - Media
      summary: Create a new media group.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GroupRequest"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Group"
        '400':
          description: Bad Request
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/media/groups/{id}":
    put:
      tags:
      - Media
      summary: Updates a media group.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: id
        in: path
        description: Group id
        required: true
        schema:
          type: string
      requestBody:
        description: Device group
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GroupRequest"
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
    delete:
      tags:
      - Media
      summary: Delete a media group.
      description: Group must be empty.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/media/{group_id}/{file_name}":
    post:
      tags:
      - Media
      summary: Uploads new media asset.
      description: POST body should contain raw binary media file
      parameters:
      - name: group_id
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: file_name
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: shared
        in: query
        description: ''
        schema:
          type: boolean
          default: false
      - name: start_date
        in: query
        description: ''
        schema:
          type: string
          format: date-time
      - name: end_date
        in: query
        description: ''
        schema:
          type: string
          format: date-time
      - name: advertiser_id
        in: query
        description: ''
        schema:
          type: integer
          format: int32
      - name: name
        in: query
        description: ''
        schema:
          type: string
      - name: description
        in: query
        description: ''
        schema:
          type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Media"
        '400':
          description: Bad Request
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/media/import":
    post:
      tags:
      - Media
      summary: Import a file from a URL.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: url
        in: query
        description: URL of the file to import
        schema:
          type: string
      - name: group_id
        in: query
        description: ''
        schema:
          type: string
      responses:
        '201':
          description: Returns the newly created media
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Media"
        '400':
          description: If the API key is invalid or upload was not supplied
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/playlists":
    get:
      tags:
      - Playlists
      summary: Gets all playlists in an account.
      description: ''
      parameters:
      - name: api_key
        in: query
        schema:
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: take
        in: query
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        schema:
          type: integer
          format: int32
      - name: group_id
        in: query
        schema:
          type: array
          items:
            type: string
      - name: group_name
        in: query
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Returns an array of playlists
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Playlist"
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/playlists/{id}":
    get:
      tags:
      - Playlists
      summary: Gets a playlist by ID.
      description: ''
      parameters:
      - name: api_key
        in: query
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Returns the playlist matching the ID
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Playlist"
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
    put:
      tags:
      - Playlists
      summary: Put a playlist. Replaces a playlist with the one provided.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Playlist"
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
    delete:
      tags:
      - Playlists
      summary: Delete a playlist.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
    patch:
      tags:
      - Playlists
      summary: "Patch a playlist. Patch allows partial updates by targeting specific
        properties of the playlist.\r\nUses the JSON Patch syntax (http://jsonpatch.com)"
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: id
        in: path
        description: Playlist Id
        required: true
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/JsonPatchDocument"
      responses:
        '200':
          description: Success
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/playlists/groups":
    get:
      tags:
      - Playlists
      summary: Gets playlist groups in the account.
      description: ''
      operationId: GetPlaylistGroups
      parameters:
      - name: api_key
        in: query
        schema:
          type: string
      - name: tree
        in: query
        schema:
          type: boolean
          default: false
      - name: id
        in: query
        schema:
          type: string
      - name: take
        in: query
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Returns an array of playlist groups
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Group"
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
    post:
      tags:
      - Playlists
      summary: Create a new playlist group.
      parameters:
      - name: api_key
        in: query
        schema:
          type: string
      requestBody:
        description: Playlist group
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GroupRequest"
      responses:
        '201':
          description: Returns the newly-created item
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Group"
        '400':
          description: If the item is null
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/playlists/groups/{id}":
    put:
      tags:
      - Playlists
      summary: Updates a playlist group.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: id
        in: path
        description: Group id
        required: true
        schema:
          type: string
      requestBody:
        description: Device group
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GroupRequest"
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
    delete:
      tags:
      - Playlists
      summary: Delete a playlist group.
      description: Group must be empty.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/report/adhawk/impressions-by-gender":
    get:
      tags:
      - Report
      parameters:
      - name: api_key
        in: query
        schema:
          type: string
      - name: start
        in: query
        schema:
          type: string
          format: date-time
      - name: end
        in: query
        schema:
          type: string
          format: date-time
      - name: gender
        in: query
        schema:
          type: array
          items:
            type: string
      - name: device_id
        in: query
        schema:
          type: array
          items:
            type: string
      - name: compare_start
        in: query
        schema:
          type: string
          format: date-time
      - name: compare_end
        in: query
        schema:
          type: string
          format: date-time
      responses:
        '200':
          description: Success
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/report/adhawk/impressions-by-hour":
    get:
      tags:
      - Report
      parameters:
      - name: api_key
        in: query
        schema:
          type: string
      - name: start
        in: query
        schema:
          type: string
          format: date-time
      - name: end
        in: query
        schema:
          type: string
          format: date-time
      - name: interval
        in: query
        schema:
          "$ref": "#/components/schemas/IntervalType"
      - name: metric
        in: query
        schema:
          "$ref": "#/components/schemas/MetricType"
      - name: device_id
        in: query
        schema:
          type: array
          items:
            type: string
      - name: compare_start
        in: query
        schema:
          type: string
          format: date-time
      - name: compare_end
        in: query
        schema:
          type: string
          format: date-time
      responses:
        '200':
          description: Success
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/report/adhawk/impressions-by-age":
    get:
      tags:
      - Report
      parameters:
      - name: api_key
        in: query
        schema:
          type: string
      - name: start
        in: query
        schema:
          type: string
          format: date-time
      - name: end
        in: query
        schema:
          type: string
          format: date-time
      - name: interval
        in: query
        schema:
          "$ref": "#/components/schemas/IntervalType"
      - name: metric
        in: query
        schema:
          "$ref": "#/components/schemas/MetricType"
      - name: device_id
        in: query
        schema:
          type: array
          items:
            type: string
      - name: compare_start
        in: query
        schema:
          type: string
          format: date-time
      - name: compare_end
        in: query
        schema:
          type: string
          format: date-time
      responses:
        '200':
          description: Success
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/report/adhawk/device-detail":
    get:
      tags:
      - Report
      parameters:
      - name: api_key
        in: query
        schema:
          type: string
      - name: start
        in: query
        schema:
          type: string
          format: date-time
      - name: end
        in: query
        schema:
          type: string
          format: date-time
      - name: interval
        in: query
        schema:
          "$ref": "#/components/schemas/IntervalType"
      - name: metric
        in: query
        schema:
          "$ref": "#/components/schemas/MetricType"
      - name: device_id
        in: query
        schema:
          type: array
          items:
            type: string
      - name: compare_start
        in: query
        schema:
          type: string
          format: date-time
      - name: compare_end
        in: query
        schema:
          type: string
          format: date-time
      responses:
        '200':
          description: Success
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/report/adhawk/gender-detail":
    get:
      tags:
      - Report
      parameters:
      - name: api_key
        in: query
        schema:
          type: string
      - name: start
        in: query
        schema:
          type: string
          format: date-time
      - name: end
        in: query
        schema:
          type: string
          format: date-time
      - name: interval
        in: query
        schema:
          "$ref": "#/components/schemas/IntervalType"
      - name: metric
        in: query
        schema:
          "$ref": "#/components/schemas/MetricType"
      - name: device_id
        in: query
        schema:
          type: array
          items:
            type: string
      - name: compare_start
        in: query
        schema:
          type: string
          format: date-time
      - name: compare_end
        in: query
        schema:
          type: string
          format: date-time
      responses:
        '200':
          description: Success
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/report/adhawk/device-summary":
    get:
      tags:
      - Report
      parameters:
      - name: api_key
        in: query
        schema:
          type: string
      - name: start
        in: query
        schema:
          type: string
          format: date-time
      - name: end
        in: query
        schema:
          type: string
          format: date-time
      - name: interval
        in: query
        schema:
          "$ref": "#/components/schemas/IntervalType"
      - name: metric
        in: query
        schema:
          "$ref": "#/components/schemas/MetricType"
      - name: device_id
        in: query
        schema:
          type: array
          items:
            type: string
      - name: compare_start
        in: query
        schema:
          type: string
          format: date-time
      - name: compare_end
        in: query
        schema:
          type: string
          format: date-time
      responses:
        '200':
          description: Success
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/report/adhawk/device-heatmap":
    get:
      tags:
      - Report
      parameters:
      - name: api_key
        in: query
        schema:
          type: string
      - name: start
        in: query
        schema:
          type: string
          format: date-time
      - name: end
        in: query
        schema:
          type: string
          format: date-time
      - name: interval
        in: query
        schema:
          "$ref": "#/components/schemas/IntervalType"
      - name: metric
        in: query
        schema:
          "$ref": "#/components/schemas/MetricType"
      - name: device_id
        in: query
        schema:
          type: array
          items:
            type: string
      - name: compare_start
        in: query
        schema:
          type: string
          format: date-time
      - name: compare_end
        in: query
        schema:
          type: string
          format: date-time
      responses:
        '200':
          description: Success
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/report/adhawk/device-geolocation":
    get:
      tags:
      - Report
      parameters:
      - name: api_key
        in: query
        schema:
          type: string
      - name: start
        in: query
        schema:
          type: string
          format: date-time
      - name: end
        in: query
        schema:
          type: string
          format: date-time
      - name: interval
        in: query
        schema:
          "$ref": "#/components/schemas/IntervalType"
      - name: metric
        in: query
        schema:
          "$ref": "#/components/schemas/MetricType"
      - name: device_id
        in: query
        schema:
          type: array
          items:
            type: string
      - name: compare_start
        in: query
        schema:
          type: string
          format: date-time
      - name: compare_end
        in: query
        schema:
          type: string
          format: date-time
      responses:
        '200':
          description: Success
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/report":
    get:
      tags:
      - Report
      summary: Returns a list of reports available for export.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: id
        in: query
        description: Optional report id filter
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Report"
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/report/export":
    post:
      tags:
      - Report
      summary: Generate and export a report.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: exclude_body
        in: query
        description: Exclude the generated report body in the response. This report
          is always available at the URL provided in the X-RevelDigital-GeneratedReportUrl
          header value.
        schema:
          type: boolean
      requestBody:
        description: Report parameters
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ReportExportPostBody"
      responses:
        '200':
          description: Success
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/report/export/{report_id}":
    get:
      tags:
      - Report
      parameters:
      - name: api_key
        in: query
        schema:
          type: string
      - name: report_id
        in: path
        required: true
        schema:
          type: string
      - name: format
        in: query
        schema:
          "$ref": "#/components/schemas/FormatType"
      - name: activity_type
        in: query
        schema:
          type: string
      - name: interval
        in: query
        schema:
          "$ref": "#/components/schemas/IntervalType"
      - name: start
        in: query
        schema:
          type: string
          format: date-time
      - name: end
        in: query
        schema:
          type: string
          format: date-time
      - name: device_id
        in: query
        schema:
          type: array
          items:
            type: string
      - name: user_id
        in: query
        schema:
          type: array
          items:
            type: string
      - name: media_id
        in: query
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Success
      deprecated: true
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/schedules":
    get:
      tags:
      - Schedules
      summary: Gets schedules in an account.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: id
        in: query
        description: Optional schedule id to filter by
        schema:
          type: string
      - name: take
        in: query
        description: Optional number of items to return
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        description: Optional number of page to return
        schema:
          type: integer
          format: int32
      - name: group_id
        in: query
        description: Optional schedule group Id
        schema:
          type: array
          items:
            type: string
      - name: group_name
        in: query
        description: Optional group name to filter by
        schema:
          type: array
          items:
            type: string
      - name: device_id
        in: query
        description: Optional device Id to filter by
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Schedule"
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
    post:
      tags:
      - Schedules
      summary: Creates a new schedule.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ScheduleRequest"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Schedule"
        '400':
          description: Bad Request
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/schedules/{id}":
    get:
      tags:
      - Schedules
      summary: Gets a schedule by ID.
      operationId: GetSchedule
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: id
        in: path
        description: Schedule Id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Schedule"
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
    put:
      tags:
      - Schedules
      summary: Update schedule.
      parameters:
      - name: api_key
        in: query
        description: API Key
        schema:
          type: string
      - name: id
        in: path
        description: Schedule Id
        required: true
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ScheduleRequest"
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
    patch:
      tags:
      - Schedules
      summary: "Patch a schedule. Patch allows partial updates by targeting specific
        properties of the schedule.\r\nUses the JSON Patch syntax (http://jsonpatch.com)"
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: id
        in: path
        description: Schedule Id
        required: true
        schema:
          type: string
      requestBody:
        description: Patch update
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/JsonPatchDocument"
      responses:
        '200':
          description: Success
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
    delete:
      tags:
      - Schedules
      summary: Delete a schedule.
      parameters:
      - name: api_key
        in: query
        description: API Key
        schema:
          type: string
      - name: id
        in: path
        description: Schedule Id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/schedules/groups":
    get:
      tags:
      - Schedules
      summary: Gets schedule groups in the account.
      operationId: GetScheduleGroups
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: tree
        in: query
        description: Return as tree structure
        schema:
          type: boolean
          default: false
      - name: id
        in: query
        description: Optional group id
        schema:
          type: string
      - name: take
        in: query
        description: Optional number of items to return
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        description: Optional number of page to return
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Group"
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
    post:
      tags:
      - Schedules
      summary: Create a new schedule group.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GroupRequest"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Group"
        '400':
          description: Bad Request
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/schedules/groups/{id}":
    put:
      tags:
      - Schedules
      summary: Updates a schedule group.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: id
        in: path
        description: Schedule Group id
        required: true
        schema:
          type: string
      requestBody:
        description: Device group
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GroupRequest"
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
    delete:
      tags:
      - Schedules
      summary: Delete a schedule group.
      description: Group must be empty.
      parameters:
      - name: api_key
        in: query
        description: API Key
        schema:
          type: string
      - name: id
        in: path
        description: Schedule Group Id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/templates":
    get:
      tags:
      - Templates
      summary: Gets all templates in an account.
      description: ''
      parameters:
      - name: api_key
        in: query
        schema:
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: take
        in: query
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        schema:
          type: integer
          format: int32
      - name: group_id
        in: query
        schema:
          type: array
          items:
            type: string
      - name: group_name
        in: query
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: Returns an array of templates
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Template"
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/templates/{id}":
    get:
      tags:
      - Templates
      summary: Gets a template by ID.
      description: ''
      parameters:
      - name: api_key
        in: query
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Returns the template matching the ID
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Template"
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
    delete:
      tags:
      - Templates
      summary: Delete a template.
      parameters:
      - name: api_key
        in: query
        description: ''
        schema:
          type: string
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/templates/groups":
    get:
      tags:
      - Templates
      summary: Gets template groups in the account.
      description: ''
      operationId: GetTemplateGroups
      parameters:
      - name: api_key
        in: query
        schema:
          type: string
      - name: tree
        in: query
        schema:
          type: boolean
          default: false
      - name: id
        in: query
        schema:
          type: string
      - name: take
        in: query
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Returns an array of playlist groups
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Group"
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
    post:
      tags:
      - Templates
      summary: Create a new template group.
      parameters:
      - name: api_key
        in: query
        schema:
          type: string
      requestBody:
        description: Template group
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GroupRequest"
      responses:
        '201':
          description: Returns the newly-created item
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Group"
        '400':
          description: If the item is null
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/templates/groups/{id}":
    put:
      tags:
      - Templates
      summary: Updates a template group.
      parameters:
      - name: api_key
        in: query
        description: API key
        schema:
          type: string
      - name: id
        in: path
        description: Group id
        required: true
        schema:
          type: string
      requestBody:
        description: Device group
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GroupRequest"
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
    delete:
      tags:
      - Templates
      summary: Delete a template group.
      description: Group must be empty.
      parameters:
      - name: api_key
        in: query
        description: ''
        schema:
          type: string
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/users":
    get:
      tags:
      - Users
      summary: Gets all users in an account.
      description: ''
      parameters:
      - name: api_key
        in: query
        schema:
          type: string
      - name: id
        in: query
        schema:
          type: string
      - name: take
        in: query
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Returns an array of users
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/User"
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
  "/users/{id}":
    get:
      tags:
      - Users
      summary: Gets a user by ID.
      description: ''
      parameters:
      - name: api_key
        in: query
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Returns the user matching the ID
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User"
      security:
      - Bearer:
        - webapi
      - ApiKeyInHeader: []
      - ApiKeyInQuery: []
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        tags:
          type: string
          nullable: true
        business_name:
          type: string
          nullable: true
        address_1:
          type: string
          nullable: true
        address_2:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        postal_code:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        fax:
          type: string
          nullable: true
        primary_contact_id:
          type: string
          nullable: true
        secondary_contact_id:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          nullable: true
        timeZone:
          type: string
          nullable: true
        logo_url:
          type: string
          nullable: true
      additionalProperties: false
    Beacon:
      type: object
      properties:
        distance:
          type: number
          format: double
          nullable: true
        calibration:
          type: number
          format: double
          nullable: true
        phone:
          type: string
          nullable: true
        emailAddress:
          type: string
          nullable: true
        website:
          type: string
          nullable: true
        devices:
          type: array
          items:
            type: string
          nullable: true
        rating:
          type: number
          format: double
          nullable: true
        uuid:
          type: string
          nullable: true
        major:
          type: string
          nullable: true
        minor:
          type: string
          nullable: true
        notification_delay:
          type: integer
          format: int32
          nullable: true
        instance_id:
          type: string
          nullable: true
        namespace:
          type: string
          nullable: true
      additionalProperties: false
    Command:
      type: object
      properties:
        name:
          type: string
          nullable: true
        arg:
          type: string
          nullable: true
      additionalProperties: false
    Condition:
      type: object
      properties:
        type:
          "$ref": "#/components/schemas/ConditionType"
        operator:
          "$ref": "#/components/schemas/ConditionOperator"
        value_1:
          type: string
          nullable: true
        value_2:
          type: string
          nullable: true
        value_3:
          type: string
          nullable: true
        value_4:
          type: string
          nullable: true
      additionalProperties: false
    ConditionOperator:
      enum:
      - And
      - Or
      - AndNot
      - OrNot
      type: string
    ConditionType:
      enum:
      - AfterDate
      - AfterTime
      - Always
      - BeforeDate
      - BeforeTime
      - Command
      - DateRange
      - DayOfMonth
      - DaysOfWeek
      - DeviceByGroup
      - DeviceByName
      - DeviceByTag
      - Everywhere
      - GeoLocation
      - GpsWithinRadius
      - KeyEvent
      - MonthOfYear
      - Motion
      - Never
      - Nowhere
      - PctAdult
      - PctChild
      - PctFemale
      - PctMale
      - PctSenior
      - PctYoung
      - PctYoungAdult
      - PlaylistByName
      - PlaylistByTag
      - SendCommand
      - SpecificDevice
      - SpecificPlaylist
      - SpecificTemplate
      - SpecificZone
      - TemplateByName
      - TemplateByTag
      - TimeRange
      - TopicSet
      - TotalViewersGreaterThan
      - TotalViewersLessThan
      - TouchEvent
      - WeekOfMonth
      - WeekOfYear
      type: string
    Device:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        group_name:
          type: string
          nullable: true
        group_id:
          type: string
          nullable: true
        tags:
          type: string
          nullable: true
        device_type:
          "$ref": "#/components/schemas/DeviceType"
        entered_service:
          type: string
          format: date-time
          nullable: true
        last_service:
          type: string
          format: date-time
          nullable: true
        timezone:
          type: string
          nullable: true
        language_code:
          type: string
          nullable: true
        last_update:
          type: string
          format: date-time
          nullable: true
        location:
          "$ref": "#/components/schemas/Location"
        ping_data:
          "$ref": "#/components/schemas/PingData"
        registration_key:
          type: string
          nullable: true
        encrypted_registration_key:
          type: string
          nullable: true
        mac_address:
          type: string
          nullable: true
        beacon:
          "$ref": "#/components/schemas/Beacon"
        service_level:
          type: string
          nullable: true
        in_sync:
          type: boolean
      additionalProperties: false
    DeviceCommand:
      type: object
      properties:
        deviceId:
          type: string
          nullable: true
        commands:
          type: array
          items:
            "$ref": "#/components/schemas/Command"
          nullable: true
      additionalProperties: false
    DeviceJsonPatchDocument:
      type: object
      properties:
        operations:
          type: array
          items:
            "$ref": "#/components/schemas/DeviceOperation"
          nullable: true
          readOnly: true
        contractResolver:
          "$ref": "#/components/schemas/IContractResolver"
      additionalProperties: false
    DeviceOperation:
      type: object
      properties:
        operationType:
          "$ref": "#/components/schemas/OperationType"
        path:
          type: string
          nullable: true
        op:
          type: string
          nullable: true
        from:
          type: string
          nullable: true
        value:
          nullable: true
      additionalProperties: false
    DeviceRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        tags:
          type: string
          nullable: true
        timeZone:
          type: string
          nullable: true
        language_code:
          type: string
          nullable: true
        group_id:
          type: string
          nullable: true
        last_service:
          type: string
          format: date-time
          nullable: true
        mac_address:
          type: string
          nullable: true
        location:
          "$ref": "#/components/schemas/Location"
        beacon:
          "$ref": "#/components/schemas/Beacon"
      additionalProperties: false
    DeviceType:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        manufacturer:
          type: string
          nullable: true
        device_caps:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    Event:
      type: object
      properties:
        session_id:
          type: string
          nullable: true
        event_name:
          type: string
          nullable: true
        properties:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
    FormatType:
      enum:
      - XML
      - CSV
      - IMAGE
      - PDF
      - EXCEL
      - WORD
      - HTML
      - MHTML
      type: string
    Group:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        parent_id:
          type: string
          nullable: true
        count:
          type: integer
          format: int32
          nullable: true
        level:
          type: integer
          format: int32
          nullable: true
        family:
          type: integer
          format: int64
          nullable: true
        organization_count:
          type: integer
          format: int32
          nullable: true
        children:
          type: array
          items:
            "$ref": "#/components/schemas/Group"
          nullable: true
      additionalProperties: false
    GroupRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
      additionalProperties: false
    IContractResolver:
      type: object
      additionalProperties: false
    IntervalType:
      enum:
      - Minute
      - Hour
      - Day
      - Month
      type: string
      description: Duration interval to generate the report for
    JsonPatchDocument:
      type: array
      items:
        "$ref": "#/components/schemas/Operation"
      description: Array of operations to perform
    Location:
      type: object
      properties:
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        county:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        postal_code:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    LoopPolicyType:
      enum:
      - Default
      - OverSaturate2x
      - OverSaturate3x
      - OverSaturate4x
      - OverSaturate5x
      - Random
      - UnderSaturate2x
      - UnderSaturate3x
      - UnderSaturate4x
      - UnderSaturate5x
      - Prefill
      - Postfill
      - Spreadfill
      type: string
    Media:
      type: object
      properties:
        name:
          type: string
          nullable: true
        group_id:
          type: string
          nullable: true
        tags:
          type: string
          nullable: true
        advertiser_id:
          type: string
          nullable: true
        is_shared:
          type: boolean
          nullable: true
        start_date:
          type: string
          format: date-time
          nullable: true
        end_date:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
          nullable: true
        group_name:
          type: string
          nullable: true
        mime_type:
          type: string
          nullable: true
        file_size:
          type: integer
          format: int32
        file_name:
          type: string
          nullable: true
        file_url:
          type: string
          nullable: true
        thumbnail_url:
          type: string
          nullable: true
        uploaded_on:
          type: string
          format: date-time
          nullable: true
        uploaded_by_id:
          type: string
          nullable: true
      additionalProperties: false
    MediaRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        group_id:
          type: string
          nullable: true
        tags:
          type: string
          nullable: true
        advertiser_id:
          type: string
          nullable: true
        is_shared:
          type: boolean
          nullable: true
        start_date:
          type: string
          format: date-time
          nullable: true
        end_date:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    MediaRequestJsonPatchDocument:
      type: object
      properties:
        operations:
          type: array
          items:
            "$ref": "#/components/schemas/MediaRequestOperation"
          nullable: true
          readOnly: true
        contractResolver:
          "$ref": "#/components/schemas/IContractResolver"
      additionalProperties: false
    MediaRequestOperation:
      type: object
      properties:
        operationType:
          "$ref": "#/components/schemas/OperationType"
        path:
          type: string
          nullable: true
        op:
          type: string
          nullable: true
        from:
          type: string
          nullable: true
        value:
          nullable: true
      additionalProperties: false
    MetricType:
      enum:
      - PingCount
      - AverageDwell
      type: string
      description: Type of metric to run the report on
    Module:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        left:
          type: integer
          format: int32
          nullable: true
        top:
          type: integer
          format: int32
          nullable: true
        width:
          type: integer
          format: int32
          nullable: true
        height:
          type: integer
          format: int32
          nullable: true
        playlist_id:
          type: string
          nullable: true
        sequence:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    Operation:
      type: object
      properties:
        op:
          type: string
        value:
          type: object
          nullable: true
        path:
          type: string
    OperationType:
      enum:
      - Add
      - Remove
      - Replace
      - Move
      - Copy
      - Test
      - Invalid
      type: string
    PingData:
      type: object
      properties:
        type:
          type: string
          nullable: true
        snap:
          type: string
          format: byte
          nullable: true
        player_version:
          type: string
          nullable: true
        os_version:
          type: string
          nullable: true
        cpu_usage:
          type: number
          format: float
        memory_usage:
          type: number
          format: float
        mac_address:
          type: string
          nullable: true
        disk_usage:
          type: number
          format: float
        timestamp:
          type: string
          format: date-time
        bytes_received:
          type: integer
          format: int64
        transfer_rate:
          type: integer
          format: int64
        ip_address:
          type: string
          nullable: true
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
        current_schedule:
          type: string
          nullable: true
        uptime:
          type: integer
          format: int64
          nullable: true
        external_ip_address:
          type: string
          nullable: true
        download_pct_complete:
          type: integer
          format: int64
          nullable: true
        meta:
          type: object
          additionalProperties: {}
          nullable: true
        cpu_temperature:
          type: number
          format: float
          nullable: true
      additionalProperties: false
    Playlist:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        group_name:
          type: string
          nullable: true
        group_id:
          type: string
          nullable: true
        tags:
          type: string
          nullable: true
        type:
          "$ref": "#/components/schemas/PlaylistType"
        duration:
          type: integer
          format: int32
          nullable: true
        is_random_start:
          type: boolean
          nullable: true
        created_on:
          type: string
          format: date-time
          nullable: true
        created_by_id:
          type: string
          nullable: true
        modified_on:
          type: string
          format: date-time
          nullable: true
        modified_by_id:
          type: string
          nullable: true
        sources:
          type: array
          items:
            "$ref": "#/components/schemas/Source"
          nullable: true
      additionalProperties: false
    PlaylistJsonPatchDocument:
      type: object
      properties:
        operations:
          type: array
          items:
            "$ref": "#/components/schemas/PlaylistOperation"
          nullable: true
          readOnly: true
        contractResolver:
          "$ref": "#/components/schemas/IContractResolver"
      additionalProperties: false
    PlaylistOperation:
      type: object
      properties:
        operationType:
          "$ref": "#/components/schemas/OperationType"
        path:
          type: string
          nullable: true
        op:
          type: string
          nullable: true
        from:
          type: string
          nullable: true
        value:
          nullable: true
      additionalProperties: false
    PlaylistType:
      enum:
      - Multimedia
      - Slideshow
      - Template
      - Marquee
      type: string
    Report:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        parameters:
          type: array
          items:
            "$ref": "#/components/schemas/ReportParameter"
          nullable: true
      additionalProperties: false
    ReportExportPostBody:
      type: object
      properties:
        report_id:
          type: string
          description: Report name
          nullable: true
        format:
          "$ref": "#/components/schemas/FormatType"
        activity_type:
          type: string
          description: Activity type
          nullable: true
        interval_type:
          "$ref": "#/components/schemas/IntervalType"
        start_date:
          type: string
          description: Start date
          format: date-time
          nullable: true
        end_date:
          type: string
          description: End date
          format: date-time
          nullable: true
        start_time:
          type: string
          description: "Start time\r\n\r\nFormat is 'HHmm'"
          format: date-time
          nullable: true
        end_time:
          type: string
          description: "End time\r\n\r\nFormat is 'HHmm'"
          format: date-time
          nullable: true
        device_id:
          type: array
          items:
            type: string
          description: Array of devices by Id to include in report
          nullable: true
        user_id:
          type: array
          items:
            type: string
          description: Array of users by Id to include in report
          nullable: true
        media_id:
          type: array
          items:
            type: string
          description: Array of media items by Id to include in report
          nullable: true
      additionalProperties: false
    ReportParameter:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        required:
          type: boolean
        multi_value:
          type: boolean
      additionalProperties: false
    Schedule:
      type: object
      properties:
        name:
          type: string
          nullable: true
        group_id:
          type: string
          nullable: true
        tags:
          type: string
          nullable: true
        monday:
          type: boolean
          nullable: true
        tuesday:
          type: boolean
          nullable: true
        wednesday:
          type: boolean
          nullable: true
        thursday:
          type: boolean
          nullable: true
        friday:
          type: boolean
          nullable: true
        saturday:
          type: boolean
          nullable: true
        sunday:
          type: boolean
          nullable: true
        start_date:
          type: string
          nullable: true
        end_date:
          type: string
          nullable: true
        start_time:
          type: string
          nullable: true
        end_time:
          type: string
          nullable: true
        template_id:
          type: string
          nullable: true
        playlist_id:
          type: string
          nullable: true
        type:
          "$ref": "#/components/schemas/ScheduleType"
        devices:
          type: array
          items:
            "$ref": "#/components/schemas/ScheduleDevice"
          nullable: true
        conditions:
          type: array
          items:
            "$ref": "#/components/schemas/Condition"
          nullable: true
        priority:
          "$ref": "#/components/schemas/SchedulePriorityType"
        id:
          type: string
          nullable: true
        group_name:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          nullable: true
        created_by_id:
          type: string
          nullable: true
        modified_on:
          type: string
          format: date-time
          nullable: true
        modified_by_id:
          type: string
          nullable: true
      additionalProperties: false
    ScheduleDevice:
      type: object
      properties:
        id:
          type: string
          nullable: true
      additionalProperties: false
    SchedulePriorityType:
      enum:
      - Normal
      - High
      - Highest
      - Lowest
      - Low
      type: string
    ScheduleRequest:
      type: object
      properties:
        name:
          type: string
          nullable: true
        group_id:
          type: string
          nullable: true
        tags:
          type: string
          nullable: true
        monday:
          type: boolean
          nullable: true
        tuesday:
          type: boolean
          nullable: true
        wednesday:
          type: boolean
          nullable: true
        thursday:
          type: boolean
          nullable: true
        friday:
          type: boolean
          nullable: true
        saturday:
          type: boolean
          nullable: true
        sunday:
          type: boolean
          nullable: true
        start_date:
          type: string
          nullable: true
        end_date:
          type: string
          nullable: true
        start_time:
          type: string
          nullable: true
        end_time:
          type: string
          nullable: true
        template_id:
          type: string
          nullable: true
        playlist_id:
          type: string
          nullable: true
        type:
          "$ref": "#/components/schemas/ScheduleType"
        devices:
          type: array
          items:
            "$ref": "#/components/schemas/ScheduleDevice"
          nullable: true
        conditions:
          type: array
          items:
            "$ref": "#/components/schemas/Condition"
          nullable: true
        priority:
          "$ref": "#/components/schemas/SchedulePriorityType"
      additionalProperties: false
    ScheduleRequestJsonPatchDocument:
      type: object
      properties:
        operations:
          type: array
          items:
            "$ref": "#/components/schemas/ScheduleRequestOperation"
          nullable: true
          readOnly: true
        contractResolver:
          "$ref": "#/components/schemas/IContractResolver"
      additionalProperties: false
    ScheduleRequestOperation:
      type: object
      properties:
        operationType:
          "$ref": "#/components/schemas/OperationType"
        path:
          type: string
          nullable: true
        op:
          type: string
          nullable: true
        from:
          type: string
          nullable: true
        value:
          nullable: true
      additionalProperties: false
    ScheduleType:
      enum:
      - Playlist
      - Template
      - Campaign
      type: string
    Source:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        type:
          "$ref": "#/components/schemas/SourceType"
        sequence:
          type: integer
          format: int32
          nullable: true
        media_id:
          type: string
          nullable: true
        template_id:
          type: string
          nullable: true
        playlist_id:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        interval:
          type: integer
          format: int32
          nullable: true
        media:
          "$ref": "#/components/schemas/Media"
        loop_policy_type:
          "$ref": "#/components/schemas/LoopPolicyType"
        conditions:
          type: array
          items:
            "$ref": "#/components/schemas/Condition"
          nullable: true
      additionalProperties: false
    SourceType:
      enum:
      - Audio
      - Command
      - Flash
      - Gadget
      - Image
      - Pdf
      - PlaceExchange
      - Playlist
      - PowerPoint
      - Rss
      - Svg
      - Template
      - Text
      - Twitter
      - Url
      - Video
      - VistarMedia
      - WebPage
      - YouTube
      type: string
    Template:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        group_name:
          type: string
          nullable: true
        group_id:
          type: string
          nullable: true
        tags:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          nullable: true
        created_by_id:
          type: string
          nullable: true
        modified_on:
          type: string
          format: date-time
          nullable: true
        modified_by_id:
          type: string
          nullable: true
        script:
          type: string
          nullable: true
        back_color:
          type: string
          nullable: true
        width:
          type: integer
          format: int32
          nullable: true
        height:
          type: integer
          format: int32
          nullable: true
        orientation:
          type: integer
          format: int32
          nullable: true
        modules:
          type: array
          items:
            "$ref": "#/components/schemas/Module"
          nullable: true
      additionalProperties: false
    User:
      type: object
      properties:
        id:
          type: string
          nullable: true
        first_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        postal_code:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        home_phone:
          type: string
          nullable: true
        work_phone:
          type: string
          nullable: true
        mobile_phone:
          type: string
          nullable: true
        created_on:
          type: string
          format: date-time
          nullable: true
        email:
          type: string
          nullable: true
        role:
          type: array
          items:
            type: string
          nullable: true
        user_name:
          type: string
          nullable: true
        last_activity:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://id.reveldigital.com/connect/authorize
          tokenUrl: https://id.reveldigital.com/connect/token
          scopes:
            webapi: Web API
    ApiKeyInHeader:
      type: apiKey
      description: 'Utilize a header based API key associated with your Revel Digital
        account. X-RevelDigital-ApiKey: XXXXXXXX'
      name: X-RevelDigital-ApiKey
      in: header
    ApiKeyInQuery:
      type: apiKey
      description: Utilize a query based API key associated with your Revel Digital
        account. api_key=XXXXXXXXX
      name: api_key
      in: query
security:
- {}
