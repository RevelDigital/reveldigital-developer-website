{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction This site is dedicated to developers wishing to extend the RevelDigital platform REST API Integration with your Revel Digital account information including media, devices, playlists, reports, etc. Player API for Windows Runtime scripting of your Windows based digital signage. Player API for Android Runtime scripting of your Android based digital signage. Gadgets Creating dynamic template components such as weather or calendar","title":"Home"},{"location":"#introduction","text":"This site is dedicated to developers wishing to extend the RevelDigital platform","title":"Introduction"},{"location":"#rest-api","text":"Integration with your Revel Digital account information including media, devices, playlists, reports, etc.","title":"REST API"},{"location":"#player-api-for-windows","text":"Runtime scripting of your Windows based digital signage.","title":"Player API for Windows"},{"location":"#player-api-for-android","text":"Runtime scripting of your Android based digital signage.","title":"Player API for Android"},{"location":"#gadgets","text":"Creating dynamic template components such as weather or calendar","title":"Gadgets"},{"location":"about/","text":"","title":"About"},{"location":"android/","text":"Revel Digital Player API for Android Introduction The Revel Digital Player API provides runtime access to the Revel Digital player software. This capability allows complete freedom to manipulate the signage, while it's playing, to achieve any level of functionality required. The player software is built on the Android Platform and utilizes a Javascript scripting engine for interpretation of user supplied code. Scripts are able to leverage the complete Android Framework. At the heart of the API is the Controller . The Controller has a reference to the currently active Schedule and Template . Each Template has a list of its Modules which together compose the template content. Each template Module has a reference to the actual control responsible for rendering its content. The control is accessed through the RevelControl interface and has a number of RevelDigital specific methods and properties. The RevelControl interface can also be treated as a reference to an Android View for performing any Android specific operations. Similarily the Template interface can be treated as a reference to an Android ViewGroup . Example script The following example will fade out an image when a hot spot is clicked. The template looks like this: The image is named Static Image 1 and the hot spot is named Hot Spot 1 . These names are assigned at template design time and are always accessible from script directly by name. Spaces and other special characters in the name are always substituted with an underscore in script . To edit the script for this template, click to open the Menu in the template designer, then click RevelScript Editor. Then enter the following script: Hot_Spot_1.setOnClickListener(new View.OnClickListener() { onClick(View v) { Static_Image_1.animate().alpha(0); } }); In this example an event handler was added for the Click event . This in turn called alpha method of the Android animation framework to perform the fade. Snippets The script editor has a number of built-in snippets available for some of the more common scripting tasks. Only zones currently added to the template will be available in the snippet dropdown. These snippets will auto generate the script necessary to perform the function selected. IMPORTANT: Make sure your platform is properly selected at the top/right of the script editor window. Technical Reference Please refer to our technical API website for more details on actual controls, events, and methods available. https://reveldigital.github.io/RevelDigital.Player.Android.Doc/","title":"Player API for Android"},{"location":"android/#revel-digital-player-api-for-android","text":"","title":"Revel Digital Player API for Android"},{"location":"android/#introduction","text":"The Revel Digital Player API provides runtime access to the Revel Digital player software. This capability allows complete freedom to manipulate the signage, while it's playing, to achieve any level of functionality required. The player software is built on the Android Platform and utilizes a Javascript scripting engine for interpretation of user supplied code. Scripts are able to leverage the complete Android Framework. At the heart of the API is the Controller . The Controller has a reference to the currently active Schedule and Template . Each Template has a list of its Modules which together compose the template content. Each template Module has a reference to the actual control responsible for rendering its content. The control is accessed through the RevelControl interface and has a number of RevelDigital specific methods and properties. The RevelControl interface can also be treated as a reference to an Android View for performing any Android specific operations. Similarily the Template interface can be treated as a reference to an Android ViewGroup .","title":"Introduction"},{"location":"android/#example-script","text":"The following example will fade out an image when a hot spot is clicked. The template looks like this: The image is named Static Image 1 and the hot spot is named Hot Spot 1 . These names are assigned at template design time and are always accessible from script directly by name. Spaces and other special characters in the name are always substituted with an underscore in script . To edit the script for this template, click to open the Menu in the template designer, then click RevelScript Editor. Then enter the following script: Hot_Spot_1.setOnClickListener(new View.OnClickListener() { onClick(View v) { Static_Image_1.animate().alpha(0); } }); In this example an event handler was added for the Click event . This in turn called alpha method of the Android animation framework to perform the fade.","title":"Example script"},{"location":"android/#snippets","text":"The script editor has a number of built-in snippets available for some of the more common scripting tasks. Only zones currently added to the template will be available in the snippet dropdown. These snippets will auto generate the script necessary to perform the function selected. IMPORTANT: Make sure your platform is properly selected at the top/right of the script editor window.","title":"Snippets"},{"location":"android/#technical-reference","text":"Please refer to our technical API website for more details on actual controls, events, and methods available. https://reveldigital.github.io/RevelDigital.Player.Android.Doc/","title":"Technical Reference"},{"location":"gadgets/","text":"Revel Digital Gadgets Introduction Gadgets are a simple means of providing customizable, dynamic content to any template. The Revel Digital platform includes a number of ready-to-use gadgets for everything from weather conditions to social media feeds. Creating your own gadget is simple if you have some basic understanding of HTML and Javascript. What's in a gadget A gadget is nothing more than an XML file which defines the properties of the gadget along with the HTML and Javascript for rendering the gadget content. Here's a template for a sample gadget: <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <Module> <ModulePrefs title=\"Sample Gadget\" description=\"\" author=\"\" background=\"transparent\"> <UserPref name=\"myStringPref\" display_name=\"Example string preference\" datatype=\"string\" default_value=\"Hello World!\" required=\"true\" /> <UserPref name=\"myEnumPref\" display_name=\"Example enum preferences\" datatype=\"enum\" default_value=\"first\"> <EnumValue value=\"first\" display_value=\"First\" /> <EnumValue value=\"second\" display_value=\"Second\" /> </UserPref> <UserPref name=\"myStylePref\" display_name=\"Example style preferences\" datatype=\"style\" default_value=\"font-family:Verdana;color:rgb(255, 255, 255);font-size:24px;text-align:left;\" required=\"true\" /> <UserPref name=\"myBooleanPref\" display_name=\"Example boolean preference\" datatype=\"bool\" default_value=\"true\" /> <UserPref name=\"myColorPref\" display_name=\"color\" datatype=\"color\" default_value=\"#ff00ff\" /> <!-- The following preferences should not be modified --> <UserPref name=\"ForeColor\" datatype=\"hidden\" /> <UserPref name=\"BackColor\" datatype=\"hidden\" /> <UserPref name=\"rdW\" display_name=\"Width\" required=\"true\" default_value=\"280\" datatype=\"hidden\" /> <UserPref name=\"rdH\" display_name=\"Height\" required=\"true\" default_value=\"190\" datatype=\"hidden\" /> <UserPref name=\"rdKey\" display_name=\"Device Registration Key\" default_value=\"*|DEVICE.REGISTRATIONKEY|*\" datatype=\"hidden\" /> </ModulePrefs> <Content type=\"html\"> <![CDATA[ <style type=\"text/css\"> body * { line-height: 1.2em; letter-spacing: 0; word-spacing: normal; } body { background: transparent; width: __UP_rdW__px; height: __UP_rdH__px; overflow: hidden; } .my-style { __UP_myStylePref__; } </style> <!-- Preferences can be inlined in your HTML like so --> <div class=\"my-style\" id=\"container\">__UP_myStringPref__</div> <script type=\"text/javascript\"> var prefs = new gadgets.Prefs(); // This function is called after the gadget has been initialized. function onLoad() { <!-- Preferences can be accessed at runtime like so --> alert(prefs.getString('myStringPref')); } gadgets.util.registerOnLoadHandler(onLoad); </script> ]]> </Content> </Module> Module prefs You'll see in the sample gadget a section for module preferences called <ModulePrefs> . It's here that you'll define any customizable properties for your gadget. A preference is defined with a <UserPref> element and can have any of the following data types: string for simple string properties enum for defining a list of selectable options bool for a checkbox type property style for defining a number of CSS type styles hidden for providing properties to the gadget which are not visible to the template designer These preferences are then available in the gadget content either by direct substitution: <!-- This will substitute the myStringPref property --> <div class=\"my-style\" id=\"container\">__UP_myStringPref__</div> or by utilizing the gadget Javascript API method to retrieve a property value: /* Preferences can be accessed at runtime like so */ alert(prefs.getString('myStringPref')); Module content The <Content> section of the gadget is where your HTML/Javascript is contained. This is the visible portion of the gadget and can contain most any valid HTML markup. It's recommended to include the following script for initializing the gadget: <script type=\"text/javascript\"> var prefs = new gadgets.Prefs(); // This function is called after the gadget has been initialized. function onLoad() { } gadgets.util.registerOnLoadHandler(onLoad); </script> This ensures the properties will be accessible via the prefs object. Publishing your gadget Once you have your gadget XML ready to go, you'll need to make it available to the Revel Digital template editor. Most any web hosting provider will do, but we recommend Github for it's simplicity. You can read more on Github Pages here . This is a great option for simple hosting. Adding your gadget to a template Now that your gadget is available on the web we can add it to your template. Add a new Gadget zone to your template, and paste the URL to your gadget XML in the Source field. Click the refresh icon to load your gadget properties in the editor. Now you can preview the template to see your work! Yeoman generator Our Yeoman generator can scaffold a template for you automatically. First, install Yeoman and generator-reveldigital-gadget using npm (we assume you have pre-installed node.js ). npm install -g yo npm install -g generator-reveldigital-gadget Then generate your new gadget: yo reveldigital-gadget","title":"Gadgets"},{"location":"gadgets/#revel-digital-gadgets","text":"","title":"Revel Digital Gadgets"},{"location":"gadgets/#introduction","text":"Gadgets are a simple means of providing customizable, dynamic content to any template. The Revel Digital platform includes a number of ready-to-use gadgets for everything from weather conditions to social media feeds. Creating your own gadget is simple if you have some basic understanding of HTML and Javascript.","title":"Introduction"},{"location":"gadgets/#whats-in-a-gadget","text":"A gadget is nothing more than an XML file which defines the properties of the gadget along with the HTML and Javascript for rendering the gadget content. Here's a template for a sample gadget: <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <Module> <ModulePrefs title=\"Sample Gadget\" description=\"\" author=\"\" background=\"transparent\"> <UserPref name=\"myStringPref\" display_name=\"Example string preference\" datatype=\"string\" default_value=\"Hello World!\" required=\"true\" /> <UserPref name=\"myEnumPref\" display_name=\"Example enum preferences\" datatype=\"enum\" default_value=\"first\"> <EnumValue value=\"first\" display_value=\"First\" /> <EnumValue value=\"second\" display_value=\"Second\" /> </UserPref> <UserPref name=\"myStylePref\" display_name=\"Example style preferences\" datatype=\"style\" default_value=\"font-family:Verdana;color:rgb(255, 255, 255);font-size:24px;text-align:left;\" required=\"true\" /> <UserPref name=\"myBooleanPref\" display_name=\"Example boolean preference\" datatype=\"bool\" default_value=\"true\" /> <UserPref name=\"myColorPref\" display_name=\"color\" datatype=\"color\" default_value=\"#ff00ff\" /> <!-- The following preferences should not be modified --> <UserPref name=\"ForeColor\" datatype=\"hidden\" /> <UserPref name=\"BackColor\" datatype=\"hidden\" /> <UserPref name=\"rdW\" display_name=\"Width\" required=\"true\" default_value=\"280\" datatype=\"hidden\" /> <UserPref name=\"rdH\" display_name=\"Height\" required=\"true\" default_value=\"190\" datatype=\"hidden\" /> <UserPref name=\"rdKey\" display_name=\"Device Registration Key\" default_value=\"*|DEVICE.REGISTRATIONKEY|*\" datatype=\"hidden\" /> </ModulePrefs> <Content type=\"html\"> <![CDATA[ <style type=\"text/css\"> body * { line-height: 1.2em; letter-spacing: 0; word-spacing: normal; } body { background: transparent; width: __UP_rdW__px; height: __UP_rdH__px; overflow: hidden; } .my-style { __UP_myStylePref__; } </style> <!-- Preferences can be inlined in your HTML like so --> <div class=\"my-style\" id=\"container\">__UP_myStringPref__</div> <script type=\"text/javascript\"> var prefs = new gadgets.Prefs(); // This function is called after the gadget has been initialized. function onLoad() { <!-- Preferences can be accessed at runtime like so --> alert(prefs.getString('myStringPref')); } gadgets.util.registerOnLoadHandler(onLoad); </script> ]]> </Content> </Module>","title":"What's in a gadget"},{"location":"gadgets/#module-prefs","text":"You'll see in the sample gadget a section for module preferences called <ModulePrefs> . It's here that you'll define any customizable properties for your gadget. A preference is defined with a <UserPref> element and can have any of the following data types: string for simple string properties enum for defining a list of selectable options bool for a checkbox type property style for defining a number of CSS type styles hidden for providing properties to the gadget which are not visible to the template designer These preferences are then available in the gadget content either by direct substitution: <!-- This will substitute the myStringPref property --> <div class=\"my-style\" id=\"container\">__UP_myStringPref__</div> or by utilizing the gadget Javascript API method to retrieve a property value: /* Preferences can be accessed at runtime like so */ alert(prefs.getString('myStringPref'));","title":"Module prefs"},{"location":"gadgets/#module-content","text":"The <Content> section of the gadget is where your HTML/Javascript is contained. This is the visible portion of the gadget and can contain most any valid HTML markup. It's recommended to include the following script for initializing the gadget: <script type=\"text/javascript\"> var prefs = new gadgets.Prefs(); // This function is called after the gadget has been initialized. function onLoad() { } gadgets.util.registerOnLoadHandler(onLoad); </script> This ensures the properties will be accessible via the prefs object.","title":"Module content"},{"location":"gadgets/#publishing-your-gadget","text":"Once you have your gadget XML ready to go, you'll need to make it available to the Revel Digital template editor. Most any web hosting provider will do, but we recommend Github for it's simplicity. You can read more on Github Pages here . This is a great option for simple hosting.","title":"Publishing your gadget"},{"location":"gadgets/#adding-your-gadget-to-a-template","text":"Now that your gadget is available on the web we can add it to your template. Add a new Gadget zone to your template, and paste the URL to your gadget XML in the Source field. Click the refresh icon to load your gadget properties in the editor. Now you can preview the template to see your work!","title":"Adding your gadget to a template"},{"location":"gadgets/#yeoman-generator","text":"Our Yeoman generator can scaffold a template for you automatically. First, install Yeoman and generator-reveldigital-gadget using npm (we assume you have pre-installed node.js ). npm install -g yo npm install -g generator-reveldigital-gadget Then generate your new gadget: yo reveldigital-gadget","title":"Yeoman generator"},{"location":"rest-api/","text":"RevelDigital REST API Provides REST based access to your RevelDigital account. Note See our Swagger Website for interactive documentation. Getting Started API Endpoint All API access originates from https://api.reveldigital.com Authentication Note A valid API key is required for each request. API keys are available in your Revel Digital account under Account > Developer API . The api_key query string parameter shoud be included in each request. $curl -i https://api.reveldigital.com/account?api_key=<your key here> Data Format All data with the exception of media uploads is in JSON format. This includes POST body data. Request headers should include the following to specify JSON as the content type. Content-Type: application/json Timestamps are returned in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ Cross Origin Resource Sharing The API supports Cross Origin Resource Sharing (CORS) for AJAX requests. You can read the CORS W3C working draft , or this intro from the HTML5 Security Guide. Swagger Interactive API documentation provided by Swagger Version: v1 /api/account GET Summary: Gets account details. Description: Parameters Name Located in Description Required Schema api_key query No string Responses Code Description Schema 200 Returns account details Account PUT Summary: Updates an account. Description: Parameters Name Located in Description Required Schema api_key query No string account body No Account Responses Code Description 201 If account was updated successfully 400 If the account API key is invalid /api/devices GET Summary: Gets all devices in an account. Description: Parameters Name Located in Description Required Schema api_key query No string id query No string take query No integer page query No integer device_type_id query No string group_id query No [ string ] group_name query No [ string ] include_snap query Yes boolean Responses Code Description Schema 200 Returns an array of devices [ Device ] POST Summary: Creates a device. Description: Parameters Name Located in Description Required Schema api_key query No string activation_code query No string device body No DeviceRequest Responses Code Description Schema 201 Returns the newly created device Device 400 If the registration code is invalid /api/devices/{id} GET Summary: Gets a device by ID. Description: Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description Schema 200 Returns the device matching the ID Device PUT Summary: Updates a device. Description: Parameters Name Located in Description Required Schema api_key query No string id path Yes string device body No DeviceRequest Responses Code Description 201 If device was updated successfully 400 If the device ID is invalid DELETE Summary: Delete a device. Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description 201 Success 400 Bad Request /api/devices/groups GET Summary: Gets device groups in the account. Description: Parameters Name Located in Description Required Schema api_key query No string id query No string take query No integer page query No integer Responses Code Description Schema 200 Returns an array of device groups [ Group ] POST Summary: Create a new device group. Parameters Name Located in Description Required Schema api_key query No string group body Device group No GroupRequest Responses Code Description Schema 201 Returns the newly-created item Group 400 If the item is null /api/devices/groups/{id} PUT Summary: Updates a device group. Parameters Name Located in Description Required Schema api_key query API key No string id path Group id Yes string group body Device group No GroupRequest Responses Code Description 201 Success 400 Bad Request DELETE Summary: Delete a device group. Description: Group must be empty. Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description 201 Success 400 Bad Request /api/devices/pingdata GET Summary: Gets device ping data by registration key. Description: Parameters Name Located in Description Required Schema key query No string Responses Code Description Schema 200 Returns ping data for the device PingData /api/devices/{registrationkey}/snap GET Summary: Gets current snapshot of the device screen. Description: Parameters Name Located in Description Required Schema registrationKey path Yes string Responses Code Description 200 Returns snapshot /api/devices/{registrationkey}/pingdata GET Summary: Gets device ping data by registration key. Description: Parameters Name Located in Description Required Schema registrationKey path Yes string Responses Code Description Schema 200 Returns ping data for the device PingData /api/devices/commands POST Summary: Sends a collection of commands to devices. Description: Parameters Name Located in Description Required Schema api_key query No string commandSet body No [ DeviceCommand ] Responses Code Description 201 Commands delivered successfully /api/devices/{id}/commands POST Summary: Sends a collection of commands to a specific device. Description: Parameters Name Located in Description Required Schema api_key query No string id path Yes string commands body No [ Command ] Responses Code Description 201 Commands delivered successfully /api/media GET Summary: Gets all media in an account. Description: Parameters Name Located in Description Required Schema api_key query No string id query No string take query No integer page query No integer group_id query No [ string ] group_name query No [ string ] Responses Code Description Schema 200 Returns an array of media [ Media ] POST Summary: Uploads new media Description: Parameters Name Located in Description Required Schema api_key query No string group_id query No string Responses Code Description Schema 201 Returns the newly created media Media 400 If the API key is invalid or upload was not supplied /api/media/{id} GET Summary: Gets media by ID. Description: Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description Schema 200 Returns the media matching the ID Media PUT Parameters Name Located in Description Required Schema api_key query No string id path Yes string media body No MediaRequest Responses Code Description 201 Success 400 Bad Request DELETE Summary: Delete a device. Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description 201 Success 400 Bad Request /api/media/groups GET Summary: Gets media groups in the account. Description: Parameters Name Located in Description Required Schema api_key query No string id query No string take query No integer page query No integer Responses Code Description Schema 200 Returns an array of device groups [ Group ] POST Summary: Create a new media group. Parameters Name Located in Description Required Schema api_key query No string group body Media group No GroupRequest Responses Code Description Schema 201 Returns the newly-created item Group 400 If the item is null /api/media/groups/{id} PUT Summary: Updates a media group. Parameters Name Located in Description Required Schema api_key query API key No string id path Group id Yes string group body Device group No GroupRequest Responses Code Description 201 Success 400 Bad Request DELETE Summary: Delete a media group. Description: Group must be empty. Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description 201 Success 400 Bad Request /api/media/{group_id}/{file_name} POST Summary: Uploads new media Description: Parameters Name Located in Description Required Schema group_id path Yes string file_name path Yes string api_key query No string shared query Yes boolean start_date query No dateTime end_date query No dateTime advertiser_id query No integer name query No string description query No string Responses Code Description Schema 201 Returns the newly created media Media 400 If the API key is invalid /api/media/import POST Summary: Import a file from a URL. Parameters Name Located in Description Required Schema api_key query API key No string url query URL of the file to import No string group_id query No string Responses Code Description Schema 201 Returns the newly created media Media 400 If the API key is invalid or upload was not supplied /api/playlists GET Summary: Gets all playlists in an account. Description: Parameters Name Located in Description Required Schema api_key query No string id query No string take query No integer page query No integer group_id query No [ string ] group_name query No [ string ] Responses Code Description Schema 200 Returns an array of playlists [ Playlist ] /api/playlists/{id} GET Summary: Gets a playlist by ID. Description: Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description Schema 200 Returns the playlist matching the ID Playlist PUT Parameters Name Located in Description Required Schema api_key query No string id path Yes string playlist body No Playlist Responses Code Description 201 Success 400 Bad Request DELETE Summary: Delete a playlist. Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description 201 Success 400 Bad Request /api/playlists/groups GET Summary: Gets playlist groups in the account. Description: Parameters Name Located in Description Required Schema api_key query No string id query No string take query No integer page query No integer Responses Code Description Schema 200 Returns an array of playlist groups [ Group ] POST Summary: Create a new playlist group. Parameters Name Located in Description Required Schema api_key query No string group body Playlist group No GroupRequest Responses Code Description Schema 201 Returns the newly-created item Group 400 If the item is null /api/playlists/groups/{id} PUT Summary: Updates a playlist group. Parameters Name Located in Description Required Schema api_key query API key No string id path Group id Yes string group body Device group No GroupRequest Responses Code Description 201 Success 400 Bad Request DELETE Summary: Delete a playlist group. Description: Group must be empty. Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description 201 Success 400 Bad Request /api/report/adhawk/impressions-by-gender GET Parameters Name Located in Description Required Schema api_key query No string start query Yes dateTime end query Yes dateTime gender query No [ string ] device_id query No [ string ] compare_start query No dateTime compare_end query No dateTime Responses Code Description 200 Success /api/report/adhawk/impressions-by-hour GET Parameters Name Located in Description Required Schema api_key query No string start query Yes dateTime end query Yes dateTime interval query Yes integer metric query Yes integer device_id query No [ string ] compare_start query No dateTime compare_end query No dateTime Responses Code Description 200 Success /api/report/adhawk/impressions-by-age GET Parameters Name Located in Description Required Schema api_key query No string start query Yes dateTime end query Yes dateTime interval query Yes integer metric query Yes integer device_id query No [ string ] compare_start query No dateTime compare_end query No dateTime Responses Code Description 200 Success /api/report/adhawk/device-detail GET Parameters Name Located in Description Required Schema api_key query No string start query Yes dateTime end query Yes dateTime interval query Yes integer metric query Yes integer device_id query No [ string ] compare_start query No dateTime compare_end query No dateTime Responses Code Description 200 Success /api/report/adhawk/gender-detail GET Parameters Name Located in Description Required Schema api_key query No string start query Yes dateTime end query Yes dateTime interval query Yes integer metric query Yes integer device_id query No [ string ] compare_start query No dateTime compare_end query No dateTime Responses Code Description 200 Success /api/report/adhawk/device-summary GET Parameters Name Located in Description Required Schema api_key query No string start query Yes dateTime end query Yes dateTime interval query Yes integer metric query Yes integer device_id query No [ string ] compare_start query No dateTime compare_end query No dateTime Responses Code Description 200 Success /api/report/adhawk/device-heatmap GET Parameters Name Located in Description Required Schema api_key query No string start query Yes dateTime end query Yes dateTime interval query Yes integer metric query Yes integer device_id query No [ string ] compare_start query No dateTime compare_end query No dateTime Responses Code Description 200 Success /api/report/adhawk/device-geolocation GET Parameters Name Located in Description Required Schema api_key query No string start query Yes dateTime end query Yes dateTime interval query Yes integer metric query Yes integer device_id query No [ string ] compare_start query No dateTime compare_end query No dateTime Responses Code Description 200 Success /api/report/export/{report_name} GET Parameters Name Located in Description Required Schema api_key query No string report_name path Yes string format query No string activity_type query No string interval query No string start query No dateTime end query No dateTime device_id query No [ string ] user_id query No [ string ] media_id query No [ string ] Responses Code Description 200 Success /api/schedules GET Summary: Gets all schedules in an account. Description: Parameters Name Located in Description Required Schema api_key query No string id query No string take query No integer page query No integer group_id query No [ string ] group_name query No [ string ] device_id query No string Responses Code Description Schema 200 Returns an array of schedules [ Schedule ] /api/schedules/{id} GET Summary: Gets a schedule by ID. Description: Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description Schema 200 Returns the schedule matching the ID Schedule DELETE Summary: Delete a schedule. Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description 201 Success 400 Bad Request /api/schedules/groups GET Summary: Gets schedule groups in the account. Description: Parameters Name Located in Description Required Schema api_key query No string id query No string take query No integer page query No integer Responses Code Description Schema 200 Returns an array of playlist groups [ Group ] POST Summary: Create a new schedule group. Parameters Name Located in Description Required Schema api_key query No string group body Schedule group No GroupRequest Responses Code Description Schema 201 Returns the newly-created item Group 400 If the item is null /api/schedules/groups/{id} PUT Summary: Updates a schedule group. Parameters Name Located in Description Required Schema api_key query API key No string id path Group id Yes string group body Device group No GroupRequest Responses Code Description 201 Success 400 Bad Request DELETE Summary: Delete a schedule group. Description: Group must be empty. Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description 201 Success 400 Bad Request /api/templates GET Summary: Gets all templates in an account. Description: Parameters Name Located in Description Required Schema api_key query No string id query No string take query No integer page query No integer group_id query No [ string ] group_name query No [ string ] Responses Code Description Schema 200 Returns an array of templates [ Template ] /api/templates/{id} GET Summary: Gets a template by ID. Description: Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description Schema 200 Returns the template matching the ID Template DELETE Summary: Delete a template. Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description 201 Success 400 Bad Request /api/templates/groups GET Summary: Gets template groups in the account. Description: Parameters Name Located in Description Required Schema api_key query No string id query No string take query No integer page query No integer Responses Code Description Schema 200 Returns an array of playlist groups [ Group ] POST Summary: Create a new template group. Parameters Name Located in Description Required Schema api_key query No string group body Template group No GroupRequest Responses Code Description Schema 201 Returns the newly-created item Group 400 If the item is null /api/templates/groups/{id} PUT Summary: Updates a template group. Parameters Name Located in Description Required Schema api_key query API key No string id path Group id Yes string group body Device group No GroupRequest Responses Code Description 201 Success 400 Bad Request DELETE Summary: Delete a template group. Description: Group must be empty. Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description 201 Success 400 Bad Request /api/users GET Summary: Gets all users in an account. Description: Parameters Name Located in Description Required Schema api_key query No string id query No string take query No integer page query No integer Responses Code Description Schema 200 Returns an array of users [ User ] /api/users/{id} GET Summary: Gets a user by ID. Description: Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description Schema 200 Returns the user matching the ID User Models Account Name Type Description Required id string No name string No tags string No business_name string No address_1 string No address_2 string No city string No state string No postal_code string No country string No phone string No fax string No primary_contact_id string No secondary_contact_id string No created_on string No timezone string No logo_url string No Device Name Type Description Required id string No name string No group_name string No group_id string No tags string No device_type DeviceType No entered_service string No last_service string No timezone string No last_update string No location Location No ping_data PingData No registration_key string No mac_address string No beacon Beacon No DeviceType Name Type Description Required id string No name string No manufacturer string No device_caps integer No Location Name Type Description Required city string No state string No county string No country string No postal_code string No address string No latitude double No longitude double No PingData Name Type Description Required snap byte No player_version string No os_version string No cpu_usage float No memory_usage float No mac_address string No disk_usage float No timestamp dateTime No bytes_received long No transfer_rate long No ip_address string No latitude double No longitude double No Beacon Name Type Description Required distance double No calibration double No phone string No email string No website string No devices [ string ] No rating double No uuid string No major string No minor string No notification_delay integer No instance_id string No namespace string No DeviceRequest Name Type Description Required name string Yes tags string No timezone string No group_id string No last_service dateTime No mac_address string No location Location No beacon Beacon No Group Name Type Description Required id string No name string No GroupRequest Name Type Description Required name string No DeviceCommand Name Type Description Required device_id string No commands [ Command ] No Command Name Type Description Required name string No arg string No Media Name Type Description Required id string No name string No group_name string No group_id string No tags string No mime_type string No file_size integer No file_name string No file_url string No thumbnail_url string No uploaded_on string No uploaded_by string No advertiser_id string No is_shared boolean No start_date string No end_date string No MediaRequest Name Type Description Required name string No group_id string No tags string No advertiser_id string No is_shared boolean No start_date dateTime No end_date dateTime No Playlist Name Type Description Required id string No name string No group_name string No group_id string No tags string No type string No created_on string No created_by_id string No modified_on string No modified_by_id string No sources [ Source ] No Source Name Type Description Required id string No name string No type string No sequence integer No media_id string No template_id string No value string No interval integer No media Media No conditions [ Condition ] No Condition Name Type Description Required type string No operator integer No value_1 string No value_2 string No value_3 string No value_4 string No Schedule Name Type Description Required id string No name string No group_name string No group_id string No tags string No monday boolean No tuesday boolean No wednesday boolean No thursday boolean No friday boolean No saturday boolean No sunday boolean No start_time string No end_time string No template_id string No playlist_id string No type string No start_date string No end_date string No devices [ ScheduleDevice ] No conditions [ Condition ] No ScheduleDevice Name Type Description Required id string No Template Name Type Description Required id string No name string No group_name string No group_id string No tags string No created_on string No created_by_id string No modified_on string No modified_by_id string No script string No back_color string No width integer No height integer No orientation integer No modules [ Module ] No Module Name Type Description Required id string No name string No type string No left integer No top integer No width integer No height integer No playlist_id string No sequence integer No User Name Type Description Required id string No first_name string No last_name string No city string No state string No postal_code string No country string No home_phone string No work_phone string No mobile_phone string No created_on string No email string Yes role [ string ] Yes user_name string Yes last_activity string No","title":"REST API"},{"location":"rest-api/#reveldigital-rest-api","text":"Provides REST based access to your RevelDigital account. Note See our Swagger Website for interactive documentation.","title":"RevelDigital REST API"},{"location":"rest-api/#getting-started","text":"","title":"Getting Started"},{"location":"rest-api/#api-endpoint","text":"All API access originates from https://api.reveldigital.com","title":"API Endpoint"},{"location":"rest-api/#authentication","text":"Note A valid API key is required for each request. API keys are available in your Revel Digital account under Account > Developer API . The api_key query string parameter shoud be included in each request. $curl -i https://api.reveldigital.com/account?api_key=<your key here>","title":"Authentication"},{"location":"rest-api/#data-format","text":"All data with the exception of media uploads is in JSON format. This includes POST body data. Request headers should include the following to specify JSON as the content type. Content-Type: application/json Timestamps are returned in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ","title":"Data Format"},{"location":"rest-api/#cross-origin-resource-sharing","text":"The API supports Cross Origin Resource Sharing (CORS) for AJAX requests. You can read the CORS W3C working draft , or this intro from the HTML5 Security Guide.","title":"Cross Origin Resource Sharing"},{"location":"rest-api/#swagger","text":"Interactive API documentation provided by Swagger Version: v1","title":"Swagger"},{"location":"rest-api/#apiaccount","text":"","title":"/api/account"},{"location":"rest-api/#get","text":"Summary: Gets account details. Description: Parameters Name Located in Description Required Schema api_key query No string Responses Code Description Schema 200 Returns account details Account","title":"GET"},{"location":"rest-api/#put","text":"Summary: Updates an account. Description: Parameters Name Located in Description Required Schema api_key query No string account body No Account Responses Code Description 201 If account was updated successfully 400 If the account API key is invalid","title":"PUT"},{"location":"rest-api/#apidevices","text":"","title":"/api/devices"},{"location":"rest-api/#get_1","text":"Summary: Gets all devices in an account. Description: Parameters Name Located in Description Required Schema api_key query No string id query No string take query No integer page query No integer device_type_id query No string group_id query No [ string ] group_name query No [ string ] include_snap query Yes boolean Responses Code Description Schema 200 Returns an array of devices [ Device ]","title":"GET"},{"location":"rest-api/#post","text":"Summary: Creates a device. Description: Parameters Name Located in Description Required Schema api_key query No string activation_code query No string device body No DeviceRequest Responses Code Description Schema 201 Returns the newly created device Device 400 If the registration code is invalid","title":"POST"},{"location":"rest-api/#apidevicesid","text":"","title":"/api/devices/{id}"},{"location":"rest-api/#get_2","text":"Summary: Gets a device by ID. Description: Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description Schema 200 Returns the device matching the ID Device","title":"GET"},{"location":"rest-api/#put_1","text":"Summary: Updates a device. Description: Parameters Name Located in Description Required Schema api_key query No string id path Yes string device body No DeviceRequest Responses Code Description 201 If device was updated successfully 400 If the device ID is invalid","title":"PUT"},{"location":"rest-api/#delete","text":"Summary: Delete a device. Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description 201 Success 400 Bad Request","title":"DELETE"},{"location":"rest-api/#apidevicesgroups","text":"","title":"/api/devices/groups"},{"location":"rest-api/#get_3","text":"Summary: Gets device groups in the account. Description: Parameters Name Located in Description Required Schema api_key query No string id query No string take query No integer page query No integer Responses Code Description Schema 200 Returns an array of device groups [ Group ]","title":"GET"},{"location":"rest-api/#post_1","text":"Summary: Create a new device group. Parameters Name Located in Description Required Schema api_key query No string group body Device group No GroupRequest Responses Code Description Schema 201 Returns the newly-created item Group 400 If the item is null","title":"POST"},{"location":"rest-api/#apidevicesgroupsid","text":"","title":"/api/devices/groups/{id}"},{"location":"rest-api/#put_2","text":"Summary: Updates a device group. Parameters Name Located in Description Required Schema api_key query API key No string id path Group id Yes string group body Device group No GroupRequest Responses Code Description 201 Success 400 Bad Request","title":"PUT"},{"location":"rest-api/#delete_1","text":"Summary: Delete a device group. Description: Group must be empty. Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description 201 Success 400 Bad Request","title":"DELETE"},{"location":"rest-api/#apidevicespingdata","text":"","title":"/api/devices/pingdata"},{"location":"rest-api/#get_4","text":"Summary: Gets device ping data by registration key. Description: Parameters Name Located in Description Required Schema key query No string Responses Code Description Schema 200 Returns ping data for the device PingData","title":"GET"},{"location":"rest-api/#apidevicesregistrationkeysnap","text":"","title":"/api/devices/{registrationkey}/snap"},{"location":"rest-api/#get_5","text":"Summary: Gets current snapshot of the device screen. Description: Parameters Name Located in Description Required Schema registrationKey path Yes string Responses Code Description 200 Returns snapshot","title":"GET"},{"location":"rest-api/#apidevicesregistrationkeypingdata","text":"","title":"/api/devices/{registrationkey}/pingdata"},{"location":"rest-api/#get_6","text":"Summary: Gets device ping data by registration key. Description: Parameters Name Located in Description Required Schema registrationKey path Yes string Responses Code Description Schema 200 Returns ping data for the device PingData","title":"GET"},{"location":"rest-api/#apidevicescommands","text":"","title":"/api/devices/commands"},{"location":"rest-api/#post_2","text":"Summary: Sends a collection of commands to devices. Description: Parameters Name Located in Description Required Schema api_key query No string commandSet body No [ DeviceCommand ] Responses Code Description 201 Commands delivered successfully","title":"POST"},{"location":"rest-api/#apidevicesidcommands","text":"","title":"/api/devices/{id}/commands"},{"location":"rest-api/#post_3","text":"Summary: Sends a collection of commands to a specific device. Description: Parameters Name Located in Description Required Schema api_key query No string id path Yes string commands body No [ Command ] Responses Code Description 201 Commands delivered successfully","title":"POST"},{"location":"rest-api/#apimedia","text":"","title":"/api/media"},{"location":"rest-api/#get_7","text":"Summary: Gets all media in an account. Description: Parameters Name Located in Description Required Schema api_key query No string id query No string take query No integer page query No integer group_id query No [ string ] group_name query No [ string ] Responses Code Description Schema 200 Returns an array of media [ Media ]","title":"GET"},{"location":"rest-api/#post_4","text":"Summary: Uploads new media Description: Parameters Name Located in Description Required Schema api_key query No string group_id query No string Responses Code Description Schema 201 Returns the newly created media Media 400 If the API key is invalid or upload was not supplied","title":"POST"},{"location":"rest-api/#apimediaid","text":"","title":"/api/media/{id}"},{"location":"rest-api/#get_8","text":"Summary: Gets media by ID. Description: Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description Schema 200 Returns the media matching the ID Media","title":"GET"},{"location":"rest-api/#put_3","text":"Parameters Name Located in Description Required Schema api_key query No string id path Yes string media body No MediaRequest Responses Code Description 201 Success 400 Bad Request","title":"PUT"},{"location":"rest-api/#delete_2","text":"Summary: Delete a device. Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description 201 Success 400 Bad Request","title":"DELETE"},{"location":"rest-api/#apimediagroups","text":"","title":"/api/media/groups"},{"location":"rest-api/#get_9","text":"Summary: Gets media groups in the account. Description: Parameters Name Located in Description Required Schema api_key query No string id query No string take query No integer page query No integer Responses Code Description Schema 200 Returns an array of device groups [ Group ]","title":"GET"},{"location":"rest-api/#post_5","text":"Summary: Create a new media group. Parameters Name Located in Description Required Schema api_key query No string group body Media group No GroupRequest Responses Code Description Schema 201 Returns the newly-created item Group 400 If the item is null","title":"POST"},{"location":"rest-api/#apimediagroupsid","text":"","title":"/api/media/groups/{id}"},{"location":"rest-api/#put_4","text":"Summary: Updates a media group. Parameters Name Located in Description Required Schema api_key query API key No string id path Group id Yes string group body Device group No GroupRequest Responses Code Description 201 Success 400 Bad Request","title":"PUT"},{"location":"rest-api/#delete_3","text":"Summary: Delete a media group. Description: Group must be empty. Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description 201 Success 400 Bad Request","title":"DELETE"},{"location":"rest-api/#apimediagroup_idfile_name","text":"","title":"/api/media/{group_id}/{file_name}"},{"location":"rest-api/#post_6","text":"Summary: Uploads new media Description: Parameters Name Located in Description Required Schema group_id path Yes string file_name path Yes string api_key query No string shared query Yes boolean start_date query No dateTime end_date query No dateTime advertiser_id query No integer name query No string description query No string Responses Code Description Schema 201 Returns the newly created media Media 400 If the API key is invalid","title":"POST"},{"location":"rest-api/#apimediaimport","text":"","title":"/api/media/import"},{"location":"rest-api/#post_7","text":"Summary: Import a file from a URL. Parameters Name Located in Description Required Schema api_key query API key No string url query URL of the file to import No string group_id query No string Responses Code Description Schema 201 Returns the newly created media Media 400 If the API key is invalid or upload was not supplied","title":"POST"},{"location":"rest-api/#apiplaylists","text":"","title":"/api/playlists"},{"location":"rest-api/#get_10","text":"Summary: Gets all playlists in an account. Description: Parameters Name Located in Description Required Schema api_key query No string id query No string take query No integer page query No integer group_id query No [ string ] group_name query No [ string ] Responses Code Description Schema 200 Returns an array of playlists [ Playlist ]","title":"GET"},{"location":"rest-api/#apiplaylistsid","text":"","title":"/api/playlists/{id}"},{"location":"rest-api/#get_11","text":"Summary: Gets a playlist by ID. Description: Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description Schema 200 Returns the playlist matching the ID Playlist","title":"GET"},{"location":"rest-api/#put_5","text":"Parameters Name Located in Description Required Schema api_key query No string id path Yes string playlist body No Playlist Responses Code Description 201 Success 400 Bad Request","title":"PUT"},{"location":"rest-api/#delete_4","text":"Summary: Delete a playlist. Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description 201 Success 400 Bad Request","title":"DELETE"},{"location":"rest-api/#apiplaylistsgroups","text":"","title":"/api/playlists/groups"},{"location":"rest-api/#get_12","text":"Summary: Gets playlist groups in the account. Description: Parameters Name Located in Description Required Schema api_key query No string id query No string take query No integer page query No integer Responses Code Description Schema 200 Returns an array of playlist groups [ Group ]","title":"GET"},{"location":"rest-api/#post_8","text":"Summary: Create a new playlist group. Parameters Name Located in Description Required Schema api_key query No string group body Playlist group No GroupRequest Responses Code Description Schema 201 Returns the newly-created item Group 400 If the item is null","title":"POST"},{"location":"rest-api/#apiplaylistsgroupsid","text":"","title":"/api/playlists/groups/{id}"},{"location":"rest-api/#put_6","text":"Summary: Updates a playlist group. Parameters Name Located in Description Required Schema api_key query API key No string id path Group id Yes string group body Device group No GroupRequest Responses Code Description 201 Success 400 Bad Request","title":"PUT"},{"location":"rest-api/#delete_5","text":"Summary: Delete a playlist group. Description: Group must be empty. Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description 201 Success 400 Bad Request","title":"DELETE"},{"location":"rest-api/#apireportadhawkimpressions-by-gender","text":"","title":"/api/report/adhawk/impressions-by-gender"},{"location":"rest-api/#get_13","text":"Parameters Name Located in Description Required Schema api_key query No string start query Yes dateTime end query Yes dateTime gender query No [ string ] device_id query No [ string ] compare_start query No dateTime compare_end query No dateTime Responses Code Description 200 Success","title":"GET"},{"location":"rest-api/#apireportadhawkimpressions-by-hour","text":"","title":"/api/report/adhawk/impressions-by-hour"},{"location":"rest-api/#get_14","text":"Parameters Name Located in Description Required Schema api_key query No string start query Yes dateTime end query Yes dateTime interval query Yes integer metric query Yes integer device_id query No [ string ] compare_start query No dateTime compare_end query No dateTime Responses Code Description 200 Success","title":"GET"},{"location":"rest-api/#apireportadhawkimpressions-by-age","text":"","title":"/api/report/adhawk/impressions-by-age"},{"location":"rest-api/#get_15","text":"Parameters Name Located in Description Required Schema api_key query No string start query Yes dateTime end query Yes dateTime interval query Yes integer metric query Yes integer device_id query No [ string ] compare_start query No dateTime compare_end query No dateTime Responses Code Description 200 Success","title":"GET"},{"location":"rest-api/#apireportadhawkdevice-detail","text":"","title":"/api/report/adhawk/device-detail"},{"location":"rest-api/#get_16","text":"Parameters Name Located in Description Required Schema api_key query No string start query Yes dateTime end query Yes dateTime interval query Yes integer metric query Yes integer device_id query No [ string ] compare_start query No dateTime compare_end query No dateTime Responses Code Description 200 Success","title":"GET"},{"location":"rest-api/#apireportadhawkgender-detail","text":"","title":"/api/report/adhawk/gender-detail"},{"location":"rest-api/#get_17","text":"Parameters Name Located in Description Required Schema api_key query No string start query Yes dateTime end query Yes dateTime interval query Yes integer metric query Yes integer device_id query No [ string ] compare_start query No dateTime compare_end query No dateTime Responses Code Description 200 Success","title":"GET"},{"location":"rest-api/#apireportadhawkdevice-summary","text":"","title":"/api/report/adhawk/device-summary"},{"location":"rest-api/#get_18","text":"Parameters Name Located in Description Required Schema api_key query No string start query Yes dateTime end query Yes dateTime interval query Yes integer metric query Yes integer device_id query No [ string ] compare_start query No dateTime compare_end query No dateTime Responses Code Description 200 Success","title":"GET"},{"location":"rest-api/#apireportadhawkdevice-heatmap","text":"","title":"/api/report/adhawk/device-heatmap"},{"location":"rest-api/#get_19","text":"Parameters Name Located in Description Required Schema api_key query No string start query Yes dateTime end query Yes dateTime interval query Yes integer metric query Yes integer device_id query No [ string ] compare_start query No dateTime compare_end query No dateTime Responses Code Description 200 Success","title":"GET"},{"location":"rest-api/#apireportadhawkdevice-geolocation","text":"","title":"/api/report/adhawk/device-geolocation"},{"location":"rest-api/#get_20","text":"Parameters Name Located in Description Required Schema api_key query No string start query Yes dateTime end query Yes dateTime interval query Yes integer metric query Yes integer device_id query No [ string ] compare_start query No dateTime compare_end query No dateTime Responses Code Description 200 Success","title":"GET"},{"location":"rest-api/#apireportexportreport_name","text":"","title":"/api/report/export/{report_name}"},{"location":"rest-api/#get_21","text":"Parameters Name Located in Description Required Schema api_key query No string report_name path Yes string format query No string activity_type query No string interval query No string start query No dateTime end query No dateTime device_id query No [ string ] user_id query No [ string ] media_id query No [ string ] Responses Code Description 200 Success","title":"GET"},{"location":"rest-api/#apischedules","text":"","title":"/api/schedules"},{"location":"rest-api/#get_22","text":"Summary: Gets all schedules in an account. Description: Parameters Name Located in Description Required Schema api_key query No string id query No string take query No integer page query No integer group_id query No [ string ] group_name query No [ string ] device_id query No string Responses Code Description Schema 200 Returns an array of schedules [ Schedule ]","title":"GET"},{"location":"rest-api/#apischedulesid","text":"","title":"/api/schedules/{id}"},{"location":"rest-api/#get_23","text":"Summary: Gets a schedule by ID. Description: Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description Schema 200 Returns the schedule matching the ID Schedule","title":"GET"},{"location":"rest-api/#delete_6","text":"Summary: Delete a schedule. Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description 201 Success 400 Bad Request","title":"DELETE"},{"location":"rest-api/#apischedulesgroups","text":"","title":"/api/schedules/groups"},{"location":"rest-api/#get_24","text":"Summary: Gets schedule groups in the account. Description: Parameters Name Located in Description Required Schema api_key query No string id query No string take query No integer page query No integer Responses Code Description Schema 200 Returns an array of playlist groups [ Group ]","title":"GET"},{"location":"rest-api/#post_9","text":"Summary: Create a new schedule group. Parameters Name Located in Description Required Schema api_key query No string group body Schedule group No GroupRequest Responses Code Description Schema 201 Returns the newly-created item Group 400 If the item is null","title":"POST"},{"location":"rest-api/#apischedulesgroupsid","text":"","title":"/api/schedules/groups/{id}"},{"location":"rest-api/#put_7","text":"Summary: Updates a schedule group. Parameters Name Located in Description Required Schema api_key query API key No string id path Group id Yes string group body Device group No GroupRequest Responses Code Description 201 Success 400 Bad Request","title":"PUT"},{"location":"rest-api/#delete_7","text":"Summary: Delete a schedule group. Description: Group must be empty. Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description 201 Success 400 Bad Request","title":"DELETE"},{"location":"rest-api/#apitemplates","text":"","title":"/api/templates"},{"location":"rest-api/#get_25","text":"Summary: Gets all templates in an account. Description: Parameters Name Located in Description Required Schema api_key query No string id query No string take query No integer page query No integer group_id query No [ string ] group_name query No [ string ] Responses Code Description Schema 200 Returns an array of templates [ Template ]","title":"GET"},{"location":"rest-api/#apitemplatesid","text":"","title":"/api/templates/{id}"},{"location":"rest-api/#get_26","text":"Summary: Gets a template by ID. Description: Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description Schema 200 Returns the template matching the ID Template","title":"GET"},{"location":"rest-api/#delete_8","text":"Summary: Delete a template. Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description 201 Success 400 Bad Request","title":"DELETE"},{"location":"rest-api/#apitemplatesgroups","text":"","title":"/api/templates/groups"},{"location":"rest-api/#get_27","text":"Summary: Gets template groups in the account. Description: Parameters Name Located in Description Required Schema api_key query No string id query No string take query No integer page query No integer Responses Code Description Schema 200 Returns an array of playlist groups [ Group ]","title":"GET"},{"location":"rest-api/#post_10","text":"Summary: Create a new template group. Parameters Name Located in Description Required Schema api_key query No string group body Template group No GroupRequest Responses Code Description Schema 201 Returns the newly-created item Group 400 If the item is null","title":"POST"},{"location":"rest-api/#apitemplatesgroupsid","text":"","title":"/api/templates/groups/{id}"},{"location":"rest-api/#put_8","text":"Summary: Updates a template group. Parameters Name Located in Description Required Schema api_key query API key No string id path Group id Yes string group body Device group No GroupRequest Responses Code Description 201 Success 400 Bad Request","title":"PUT"},{"location":"rest-api/#delete_9","text":"Summary: Delete a template group. Description: Group must be empty. Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description 201 Success 400 Bad Request","title":"DELETE"},{"location":"rest-api/#apiusers","text":"","title":"/api/users"},{"location":"rest-api/#get_28","text":"Summary: Gets all users in an account. Description: Parameters Name Located in Description Required Schema api_key query No string id query No string take query No integer page query No integer Responses Code Description Schema 200 Returns an array of users [ User ]","title":"GET"},{"location":"rest-api/#apiusersid","text":"","title":"/api/users/{id}"},{"location":"rest-api/#get_29","text":"Summary: Gets a user by ID. Description: Parameters Name Located in Description Required Schema api_key query No string id path Yes string Responses Code Description Schema 200 Returns the user matching the ID User","title":"GET"},{"location":"rest-api/#models","text":"","title":"Models"},{"location":"rest-api/#account","text":"Name Type Description Required id string No name string No tags string No business_name string No address_1 string No address_2 string No city string No state string No postal_code string No country string No phone string No fax string No primary_contact_id string No secondary_contact_id string No created_on string No timezone string No logo_url string No","title":"Account"},{"location":"rest-api/#device","text":"Name Type Description Required id string No name string No group_name string No group_id string No tags string No device_type DeviceType No entered_service string No last_service string No timezone string No last_update string No location Location No ping_data PingData No registration_key string No mac_address string No beacon Beacon No","title":"Device"},{"location":"rest-api/#devicetype","text":"Name Type Description Required id string No name string No manufacturer string No device_caps integer No","title":"DeviceType"},{"location":"rest-api/#location","text":"Name Type Description Required city string No state string No county string No country string No postal_code string No address string No latitude double No longitude double No","title":"Location"},{"location":"rest-api/#pingdata","text":"Name Type Description Required snap byte No player_version string No os_version string No cpu_usage float No memory_usage float No mac_address string No disk_usage float No timestamp dateTime No bytes_received long No transfer_rate long No ip_address string No latitude double No longitude double No","title":"PingData"},{"location":"rest-api/#beacon","text":"Name Type Description Required distance double No calibration double No phone string No email string No website string No devices [ string ] No rating double No uuid string No major string No minor string No notification_delay integer No instance_id string No namespace string No","title":"Beacon"},{"location":"rest-api/#devicerequest","text":"Name Type Description Required name string Yes tags string No timezone string No group_id string No last_service dateTime No mac_address string No location Location No beacon Beacon No","title":"DeviceRequest"},{"location":"rest-api/#group","text":"Name Type Description Required id string No name string No","title":"Group"},{"location":"rest-api/#grouprequest","text":"Name Type Description Required name string No","title":"GroupRequest"},{"location":"rest-api/#devicecommand","text":"Name Type Description Required device_id string No commands [ Command ] No","title":"DeviceCommand"},{"location":"rest-api/#command","text":"Name Type Description Required name string No arg string No","title":"Command"},{"location":"rest-api/#media","text":"Name Type Description Required id string No name string No group_name string No group_id string No tags string No mime_type string No file_size integer No file_name string No file_url string No thumbnail_url string No uploaded_on string No uploaded_by string No advertiser_id string No is_shared boolean No start_date string No end_date string No","title":"Media"},{"location":"rest-api/#mediarequest","text":"Name Type Description Required name string No group_id string No tags string No advertiser_id string No is_shared boolean No start_date dateTime No end_date dateTime No","title":"MediaRequest"},{"location":"rest-api/#playlist","text":"Name Type Description Required id string No name string No group_name string No group_id string No tags string No type string No created_on string No created_by_id string No modified_on string No modified_by_id string No sources [ Source ] No","title":"Playlist"},{"location":"rest-api/#source","text":"Name Type Description Required id string No name string No type string No sequence integer No media_id string No template_id string No value string No interval integer No media Media No conditions [ Condition ] No","title":"Source"},{"location":"rest-api/#condition","text":"Name Type Description Required type string No operator integer No value_1 string No value_2 string No value_3 string No value_4 string No","title":"Condition"},{"location":"rest-api/#schedule","text":"Name Type Description Required id string No name string No group_name string No group_id string No tags string No monday boolean No tuesday boolean No wednesday boolean No thursday boolean No friday boolean No saturday boolean No sunday boolean No start_time string No end_time string No template_id string No playlist_id string No type string No start_date string No end_date string No devices [ ScheduleDevice ] No conditions [ Condition ] No","title":"Schedule"},{"location":"rest-api/#scheduledevice","text":"Name Type Description Required id string No","title":"ScheduleDevice"},{"location":"rest-api/#template","text":"Name Type Description Required id string No name string No group_name string No group_id string No tags string No created_on string No created_by_id string No modified_on string No modified_by_id string No script string No back_color string No width integer No height integer No orientation integer No modules [ Module ] No","title":"Template"},{"location":"rest-api/#module","text":"Name Type Description Required id string No name string No type string No left integer No top integer No width integer No height integer No playlist_id string No sequence integer No","title":"Module"},{"location":"rest-api/#user","text":"Name Type Description Required id string No first_name string No last_name string No city string No state string No postal_code string No country string No home_phone string No work_phone string No mobile_phone string No created_on string No email string Yes role [ string ] Yes user_name string Yes last_activity string No","title":"User"},{"location":"windows/","text":"Revel Digital Player API for Windows Introduction The Revel Digital Player API provides runtime access to the Revel Digital player software. This capability allows complete freedom to manipulate the signage, while it's playing, to achieve any level of functionality required. The player software is built on the UWP (Universal Windows Platform) and utilizes a Javascript scripting engine for interpretation of user supplied code. Scripts are able to leverage the complete UWP Framework. At the heart of the API is the Controller . The Controller has a reference to the currently active Schedule and Template . Each Template has a list of its Modules which together compose the template content. Each template Module has a reference to the actual UWP control responsible for rendering its content. The UWP control is accessed through the IRevelControl interface and has a number of RevelDigital specific methods and properties. The IRevelControl interface can also be treated as a reference to a UWP Control for performing any UWP specific operations. Similarily the ITemplate interface can be treated as a reference to the UWP Page . As a rule, the classes in this API are representative of definitions for the schedules, templates, modules, etc. That is they should be considered read-only and are purely data bound. Interfaces on the other hand represent the underlying UWP controls. These objects are normally the focus of any scripting since they provide access to the live template objects and directly affect the template visuals. Example script The following example will fade out an image when a hot spot is clicked. The template looks like this: The image is named Static Image 1 and the hot spot is named Hot Spot 1 . These names are assigned at template design time and are always accessible from script directly by name. Spaces and other special characters in the name are always substituted with an underscore in script . To edit the script for this template, click to open the Menu in the template designer, then click RevelScript Editor. Then enter the following script: Hot_Spot_1.add_Tapped(function() { Static_Image_1.FadeOut(); }); In this example an event handler was added for the Tapped event . This in turn called the FadeOut method on the image control. Snippets The script editor has a number of built-in snippets available for some of the more common scripting tasks. Only zones currently added to the template will be available in the snippet dropdown. These snippets will auto generate the script necessary to perform the function selected. IMPORTANT: Make sure your platform is properly selected at the top/right of the script editor window. Technical Reference Please refer to our technical API website for more details on actual controls, events, and methods available. https://reveldigital.github.io/ReveDigital.Player.UWP.Doc/api/index.html","title":"Player API for Windows"},{"location":"windows/#revel-digital-player-api-for-windows","text":"","title":"Revel Digital Player API for Windows"},{"location":"windows/#introduction","text":"The Revel Digital Player API provides runtime access to the Revel Digital player software. This capability allows complete freedom to manipulate the signage, while it's playing, to achieve any level of functionality required. The player software is built on the UWP (Universal Windows Platform) and utilizes a Javascript scripting engine for interpretation of user supplied code. Scripts are able to leverage the complete UWP Framework. At the heart of the API is the Controller . The Controller has a reference to the currently active Schedule and Template . Each Template has a list of its Modules which together compose the template content. Each template Module has a reference to the actual UWP control responsible for rendering its content. The UWP control is accessed through the IRevelControl interface and has a number of RevelDigital specific methods and properties. The IRevelControl interface can also be treated as a reference to a UWP Control for performing any UWP specific operations. Similarily the ITemplate interface can be treated as a reference to the UWP Page . As a rule, the classes in this API are representative of definitions for the schedules, templates, modules, etc. That is they should be considered read-only and are purely data bound. Interfaces on the other hand represent the underlying UWP controls. These objects are normally the focus of any scripting since they provide access to the live template objects and directly affect the template visuals.","title":"Introduction"},{"location":"windows/#example-script","text":"The following example will fade out an image when a hot spot is clicked. The template looks like this: The image is named Static Image 1 and the hot spot is named Hot Spot 1 . These names are assigned at template design time and are always accessible from script directly by name. Spaces and other special characters in the name are always substituted with an underscore in script . To edit the script for this template, click to open the Menu in the template designer, then click RevelScript Editor. Then enter the following script: Hot_Spot_1.add_Tapped(function() { Static_Image_1.FadeOut(); }); In this example an event handler was added for the Tapped event . This in turn called the FadeOut method on the image control.","title":"Example script"},{"location":"windows/#snippets","text":"The script editor has a number of built-in snippets available for some of the more common scripting tasks. Only zones currently added to the template will be available in the snippet dropdown. These snippets will auto generate the script necessary to perform the function selected. IMPORTANT: Make sure your platform is properly selected at the top/right of the script editor window.","title":"Snippets"},{"location":"windows/#technical-reference","text":"Please refer to our technical API website for more details on actual controls, events, and methods available. https://reveldigital.github.io/ReveDigital.Player.UWP.Doc/api/index.html","title":"Technical Reference"}]}